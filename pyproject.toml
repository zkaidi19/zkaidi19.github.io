[project]
name = "kaidi-zhang-website"
version = "1.0.0"
description = "Personal website for Kaidi Zhang - Data Science Student at University of Michigan"
authors = [
    { name = "Kaidi Zhang", email = "zkaidi@umich.edu" }
]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.8.1"
keywords = ["flask", "website", "portfolio", "data-science"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Framework :: Flask",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
]

dependencies = [
    "flask>=3.0.0",
    "werkzeug>=3.0.1",
    "jinja2>=3.1.2",
    "markupsafe>=2.1.3",
    "gunicorn>=21.2.0",
    "python-dotenv>=1.0.0",
    "flask-talisman>=1.1.0",
]


[project.urls]
Homepage = "https://zkaidi19.github.io"
Repository = "https://github.com/zkaidi19/zkaidi19.github.io"
Issues = "https://github.com/zkaidi19/zkaidi19.github.io/issues"

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.3",
    "pytest-flask>=1.3.0",
    "black>=23.11.0",
    "flake8>=6.1.0",
    "pytest-cov>=4.1.0",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "venv",
    ".venv",
    "build",
    "dist"
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["."]
omit = [
    "venv/*",
    ".venv/*",
    "tests/*",
    "*/tests/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
